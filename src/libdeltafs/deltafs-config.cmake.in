#
# deltafs-config.cmake.in
#

#
# DELTAFS_REQUIRED_PACKAGES: pkg depends to find with find_dependency()
#
set (DELTAFS_REQUIRED_PACKAGES "@DELTAFS_REQUIRED_PACKAGES@")
set (DELTAFS_ALL_COMPONENTS ${DELTAFS_REQUIRED_PACKAGES})

# MPI requires special handling
set (DELTAFS_MPI "@DELTAFS_MPI@")

# if you have depends, uncomment and add them: "find_dependency(Foo 2.4.1)"
include (CMakeFindDependencyMacro)

foreach (lcv ${DELTAFS_REQUIRED_PACKAGES})
    find_dependency (${lcv})
endforeach ()

# check for user requested components (which we map to linked in packages)
foreach (comp ${DELTAFS_FIND_COMPONENTS})
    if (NOT ";${DELTAFS_ALL_COMPONENTS};" MATCHES ";${comp};")
        set(DELTAFS_FOUND False)
        set(DELTAFS_NOTFOUND_MESSAGE
            "Specified unsupported component: ${comp}")
    endif()
endforeach()

include ("${CMAKE_CURRENT_LIST_DIR}/deltafs-targets.cmake")

#
# FindMPI doesn't generate an imported target, so chain it on to our target
#
if (DELTAFS_MPI)
    set_property (TARGET deltafs APPEND PROPERTY
                  INTERFACE_INCLUDE_DIRECTORIES ${MPI_CXX_INCLUDE_PATH})
    set_property (TARGET deltafs APPEND PROPERTY
                  INTERFACE_LINK_LIBRARIES ${MPI_CXX_LIBRARIES})
    set_property (TARGET deltafs APPEND PROPERTY
                  INTERFACE_COMPILE_OPTIONS ${MPI_CXX_COMPILE_FLAGS})
    # XXX: this doesn't propagate to lib users, is that a problem?
    # XXX: prob ok for now
    set_property (TARGET deltafs APPEND PROPERTY LINK_FLAGS
                  ${MPI_CXX_LINK_FLAGS})
endif ()

# could include a macros file if one is used

